/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    api 'org.apache.commons:commons-math3:3.6.1'
    implementation 'com.google.guava:guava:29.0-jre'
    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'
    implementation 'org.seleniumhq.selenium:selenium-java:4.4.0'
    implementation 'io.github.bonigarcia:webdrivermanager:5.3.0'
    testImplementation 'io.cucumber:cucumber-java:7.5.0'
    testImplementation 'io.cucumber:cucumber-junit:7.5.0'
    testImplementation 'io.rest-assured:rest-assured:4.3.3'
    implementation group: 'net.masterthought', name: 'cucumber-reporting', version: '5.7.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.18.0'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task runAll() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty',
            '--plugin', 'html:target/cucumber-report.html',
            '--glue', 'com.name.stepdefinitions',
             'src/test/resources/features']
        }
    }
}

task login() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty',
            '--plugin', 'html:target/cucumber-report.html',
            '--glue', 'com.name.stepdefinitions',
             'src/test/resources/features',
             '--tags', '@login']
        }
    }
}

task logout() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty',
            '--plugin', 'html:target/cucumber-report.html',
            '--glue', 'com.name.stepdefinitions',
             'src/test/resources/features',
             '--tags', '@logout']
        }
    }
}

task tags() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty',
            '--plugin', 'html:target/cucumber-report.html',
            '--glue', 'com.name.stepdefinitions',
             'src/test/resources/features',
             '--tags', "${tags}"]
        }
    }
}

test {
   	 systemProperty "cucumber.filter.tags", System.getProperty("cucumber.filter.tags")
     testLogging {
     showStandardStreams = true
 	}
   reports.html.setDestination(file("$projectDir/GradleReport"))
}